//Run these commands in you npm console 
// run on local machine change file location where you json is located-> 
// for windows: export GOOGLE_APPLICATION_CREDENTIALS="C:\Users\Mansoor\Desktop\CalHacks2022\calgaryhack2022-36518d7424ea.json"
// for mac: export GOOGLE_APPLICATION_CREDENTIALS="C:\Users\Mansoor\Desktop\CalHacks2022\calgaryhack2022-36518d7424ea.json"
// npm install --save @google-cloud/firestore

//Initialize an instance of Firestore:
console.log('Hello world initializing firestore DB!');
const Firestore = require('@google-cloud/firestore');

const db = new Firestore({
    projectId: 'calgaryhack2022',
    keyFilename: '\calgaryhack2022-36518d7424ea.json',
});

console.log('Instantiated an instance of the DB!');
//========**testing**==========
console.log('Testing printing user data!');
print_users();
console.log('Done testing user data!');

add_organization('University of Calgary', '2500 University Dr NW, Calgary, AB T2N 1N4');
var addr= get_user_addr('alovelace');
console.log(addr);
// console.log('Testing adding users');
// add_user('nuha', 'shaikh', 'she/her', 20, '614b 17 Ave SW, Calgary, AB T2S 0B4', 'nuha.shaikh1@ucalgary.ca', '403-455-9917', 'password1234');
// console.log('done testing adding users');

print_users();
//=======**end-testing**========

//=========================USER DB FUNCTIONALITIES=====================================
//Add a new user to the User collection
function add_user(first, last, pronouns, org_id, home_addr, email, phone_num, password){
    //autogenerated ID
    const data={
        first: first,
        last: last,
        pronouns: pronouns,
        org_id: org_id,
        home_addr: home_addr,
        email: email,
        phone_num:phone_num,
        password: password
    };
    (async function(){
        // Add a new document with a generated id.
        const res = await db.collection('users').add(data);
        console.log('Added document with ID: ', res.id);
    })()
}


function delete_user(user_id){ //pass the id of document -> id of specific user
    (async function(){
        const res = await db.collection('users').doc(user_id).delete();
    })()
}

//not working keeps returning undefined
function get_user_addr(doc_id){
    const usersRef = db.collection('users');
    (async function(){
        const snapshot = await usersRef.get();
        return snapshot.home_addr;
    })()
}

function print_users(){
    //printing out each collection
    console.log("In print_users function!");
    (async function(){
        console.log("In print_users async function!");
        const snapshot = await db.collection('users').get();
        snapshot.forEach((doc) => {
        console.log(doc.id, '=>', doc.data());
    });
    })()
}
//=========================**END USER DB FUNCTIONALITIES**=====================================

//=========================ORG DB FUNCTIONALITIES=====================================
//Add a new organization to the organization collection
function add_organization(name, address){
    //autogenerated ID
    const data={
        name: name,
        address: address
    };
    (async function(){
        // Add a new document with a generated id.
        const res = await db.collection('organizations').add(data);
        console.log('Added document with ID: ', res.id);
    })()
}

//may have to diversify this -> if organization name is passed then might have to extract org_id from name
function delete_organization(org_id){ //pass the id of document -> id of specific organization
    (async function(){
        const res = await db.collection('organizations').doc(org_id).delete();
    })()
}

function print_organizations(){
    //printing out each collection
    console.log("In print_users function!");
    (async function(){
        console.log("In print_orgs async function!");
        const snapshot = await db.collection('organizations').get();
        snapshot.forEach((doc) => {
        console.log(doc.id, '=>', doc.data());
    });
    })()
}
//=========================**ORG DB FUNCTIONALITIES**=====================================

//=========================journey_request FUNCTIONALITIES=====================================

function add_journey_request_driver(email, user_type, no_passengers, arrival_time){
    //autogenerated ID
    const data={
        email: email,
        user_type: user_type,
        no_passengers: no_passengers,
        arrival_time: arrival_time
    };
    (async function(){
        // Add a new document with a generated id.
        const res = await db.collection('journey_request').add(data);
        console.log('Added document with ID: ', res.id);
    })()
}

function add_journey_request_passenger(email, user_type,arrival_time){
    //autogenerated ID
    const data={
        email: email,
        user_type: user_type,
        arrival_time: arrival_time
    };
    (async function(){
        // Add a new document with a generated id.
        const res = await db.collection('journey_request').add(data);
        console.log('Added document with ID: ', res.id);
    })()
}

//may have to diversify this -> if organization name is passed then might have to extract org_id from name
function delete_journey_request(journey_id){ //pass the id of document -> id of specific organization
    (async function(){
        const res = await db.collection('journey_request').doc(journey_id).delete();
    })()
}

//=========================**END journey_request FUNCTIONALITIES**=====================================

//=========================carpool_trip FUNCTIONALITIES=====================================
function add_carpool_trip(travel_time, driver_id, departure_time, pass_pickup_times, cost_per_pass, passengers){
    //autogenerated ID
    const data={
        travel_time: travel_time,
        driver_id: driver_id,
        departure_time: departure_time,
        pass_pickup_times: pass_pickup_times,
        cost_per_pass: cost_per_pass,
        passengers: passengers
    };
    (async function(){
        // Add a new document with a generated id.
        const res = await db.collection('carpool_trip').add(data);
        console.log('Added document with ID: ', res.id);
    })()
}


//=========================**ENDcarpool_trip FUNCTIONALITIES**=====================================





